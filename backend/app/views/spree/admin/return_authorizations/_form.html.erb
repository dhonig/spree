<div data-hook="admin_return_authorization_form_fields">
<<<<<<< HEAD
  <table class="table table-condensed table-bordered index return-items-table">
=======
  <table class="table table-hover table-condensed table-bordered">
>>>>>>> Backend on Bootstrap
    <thead>
      <tr data-hook="rma_header">
        <th><%= Spree.t(:product) %></th>
        <th><%= Spree.t(:quantity_shipped) %></th>
        <th><%= Spree.t(:quantity_returned) %></th>
        <th><%= Spree.t(:return_quantity) %></th>
      </tr>
    </thead>
    <tbody>
<<<<<<< HEAD
      <%= f.fields_for :return_items, @form_return_items do |item_fields| %>
        <% return_item = item_fields.object %>
        <% inventory_unit = return_item.inventory_unit %>
        <% editable = inventory_unit.shipped? && allow_return_item_changes && return_item.reimbursement.nil? %>
        <tr>
          <td class="inventory-unit-checkbox">
            <% if editable %>
              <%= item_fields.hidden_field :inventory_unit_id %>
              <%= item_fields.check_box :_destroy, {checked: return_item.persisted?, class: 'add-item', "data-price" => return_item.pre_tax_amount}, '0', '1' %>
            <% end %>
          </td>
=======
      <% @return_authorization.order.shipments.shipped.collect{|s| s.inventory_units.to_a}.flatten.group_by(&:variant).each do | variant, units| %>
        <tr id="<%= dom_id(variant) %>" data-hook="rma_row">
>>>>>>> Backend on Bootstrap
          <td>
            <div class="variant-name"><%= variant.name %></div>
            <div class="variant-options"><%= variant.options_text %></div>
          </td>
<<<<<<< HEAD
          <td><%= inventory_unit.state.humanize %></td>
          <td>
            <%= return_item.display_pre_tax_amount %>
          </td>
          <td>
            <% if editable %>
              <%= item_fields.text_field :pre_tax_amount, { class: 'refund-amount-input form-control' } %>
            <% else %>
              <%= return_item.display_pre_tax_amount %>
            <% end %>
          </td>
          <td>
            <% if editable %>
              <%= item_fields.select :preferred_reimbursement_type_id, @reimbursement_types.collect{|r|[r.name.humanize, r.id]}, {include_blank: true}, {class: 'select2'} %>
            <% end %>
          </td>
          <td>
            <% if editable %>
              <% if return_item.exchange_processed? %>
                <%= return_item.exchange_variant.exchange_name %>
              <% else %>
                <%= item_fields.collection_select :exchange_variant_id, return_item.eligible_exchange_variants, :id, :exchange_name, { include_blank: true }, { class: "select2 return-item-exchange-selection" } %>
              <% end %>
=======
          <td><%= units.select(&:shipped?).size %></td>
          <td><%= units.select(&:returned?).size %></td>
          <td class="return_quantity ">
            <% if @return_authorization.received? %>
              <%= @return_authorization.inventory_units.group_by(&:variant)[variant].try(:size) || 0 %>
            <% elsif units.select(&:shipped?).empty? %>
              0
            <% else %>
              <%= number_field_tag "return_quantity[#{variant.id}]",
                @return_authorization.inventory_units.group_by(&:variant)[variant].try(:size) || 0, {:style => 'width:100px;', :min => 0} %>
>>>>>>> Backend on Bootstrap
            <% end %>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>

<<<<<<< HEAD
  <%= f.field_container :amount, class: ['alert alert-info'] do %>
    <%= Spree.t(:total_pre_tax_refund) %>: <span id="total_pre_tax_refund">0.00</span>
  <% end %>

  <%= f.field_container :stock_location, class: ['form-group'] do %>
    <%= f.label :stock_location, Spree.t(:stock_location) %>
    <%= f.select :stock_location_id, Spree::StockLocation.order_default.active.to_a.collect{|l|[l.name, l.id]}, {include_blank: true}, {class: 'select2', "data-placeholder" => Spree.t(:select_a_stock_location)} %>
    <%= f.error_message_on :stock_location_id %>
=======
  <%= f.field_container :amount do %>
    <%= f.label :amount, Spree.t(:amount) %> <span class="required">*</span>
    <% if @return_authorization.received? %>
      <%= @return_authorization.display_amount %>
    <% else %>
      <%= f.text_field :amount, {:style => 'width:80px;'} %> <%= Spree.t(:rma_value) %>: <span id="rma_value">0.00</span>
      <%= f.error_message_on :amount %>
    <% end %>
>>>>>>> Backend on Bootstrap
  <% end %>

  <%= f.field_container :reason, class: ['form-group'] do %>
    <%= f.label :reason, Spree.t(:reason) %>
<<<<<<< HEAD
    <%= f.select :return_authorization_reason_id, @reasons.collect{|r|[r.name, r.id]}, {include_blank: true}, {class: 'select2', "data-placeholder" => Spree.t(:select_a_return_authorization_reason)} %>
    <%= f.error_message_on :reason %>
  <% end %>

  <%= f.field_container :memo, class: ['form-group'] do %>
    <%= f.label :memo, Spree.t(:memo) %>
    <%= f.text_area :memo, :class => 'form-control' %>
    <%= f.error_message_on :memo %>
=======
    <%= f.text_area :reason, {:style => 'height:100px;', :class => 'form-control'} %>
    <%= f.error_message_on :reason %>
  <% end %>

  <%= f.field_container :stock_location do %>
    <%= f.label :stock_location, Spree.t(:stock_location) %>
    <%= f.select :stock_location_id, Spree::StockLocation.active.to_a.collect{|l|[l.name, l.id]}, {:style => 'height:100px;', :class => 'form-control'} %>
    <%= f.error_message_on :reason %>
>>>>>>> Backend on Bootstrap
  <% end %>
</div>

<script>
  var line_item_prices = {};
  <% @return_authorization.order.line_items.group_by(&:variant).each do | variant, items| %>
    line_item_prices[<%= variant.id.to_s %>] = <%= items.first.price %>;
  <% end %>

  $(document).ready(function(){
    var rma_amount = 0;
    $("td.return_quantity input").on('change', function() {
      var rma_amount = 0;
      $.each($("td.return_quantity input"), function(i, input) {
        var variant_id = $(input).prop('id').replace("return_quantity_", "");
         rma_amount += line_item_prices[variant_id] * $(input).val()
      });

      if(!isNaN(rma_amount)){
        $("span#rma_value").html(rma_amount.toFixed(2));
      }
    })
  });
</script>
